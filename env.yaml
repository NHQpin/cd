apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsidXNlcm5hbWUiOiJuaHFodWIiLCJwYXNzd29yZCI6IjIxMzIyMU1vb25AUGluIiwiZW1haWwiOiJuaHEwODEwQGdtYWlsLmNvbSIsImF1dGgiOiJibWh4YUhWaU9qSXhNekl5TVUxdmIyNUFVR2x1In19fQ==
kind: Secret
metadata:
  name: dockerhub-nhq
  namespace: minisys
type: kubernetes.io/dockerconfigjson

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: webapp
  namespace: minisys
  labels:
    app: minisys
spec:
  replicas: 3
  selector:
    matchLabels:
      app: minisys
  template:
    metadata:
      labels:
        app: minisys
    spec:
      containers:
      - name: nginx
        image: nhqhub/nhq-project:minisys
        ports:
        - containerPort: 80
      imagePullSecrets:
        - name: dockerhub-nhq

---

apiVersion: v1
kind: Service
metadata:
  namespace: minisys
  name: minisys-service
  labels:
    app: c1nd3r-app
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: minisys

---

apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: letsencrypt-prod
  namespace: minisys
spec:
  acme:
    # The ACME server URL
    server: https://acme-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: pin30227@gmail.com
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-prod
    # Enable the HTTP-01 challenge provider
    solvers:
      - http01:
          ingress:
            ingressClassName: nginx

---

apiVersion: networking.k8s.io/v1 
kind: Ingress
metadata:
  name: minisys-ingress
  namespace: minisys
  annotations:
    cert-manager.io/issuer: "letsencrypt-prod"

spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - nhq.id.vn
    secretName: minisys-tls
  rules:
  - host: nhq.id.vn
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minisys-service
            port:
              number: 80
